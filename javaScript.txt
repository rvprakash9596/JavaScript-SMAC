                        JavaScript ApnaCollege (03-August-2024)
                        =======================================


What is JavaScript :
--------------------
JS is a Programming Language . We use it to give instructions to the computer.
JS is a Dynamically Typed Programming Language.
Dynamically Typed means we don't need to define the type of data .

Input(code)---> Computer ---> Output

Setting up VS Code </>
------------------
It is a free & popular code editor by Microsoft.

VS Code Installation :
----------------------
Installation Completed..

Chapter 1:
=================================================================================================

Our 1st JS Code
---------------
Console.log is used to log(print) a message to the console.

console.log("Ravi Prakash");
Explanation
-----------
console k upar log(print) kr do..

JS Extension:
-------------
fileName.js

                                    Variables in JS :
=================================================================================================
Variables are like as a containers that holds/stores data/values.
Variables are containers for data.
Variables are temporary memory locations.


Variable Rules :
----------------
.Variable names are case sensitive; "a" & "A" is different.
.Only letters , digits, underscore(_) and $ symbol is allowed.(not even space)
.Only a letter , underscore or $ should be 1st character.
.Reserve words cannot be Variable names.

Examples:
=========
fullname="Ravi Prakash";
FULLNAME="Saurabh Kumar";

console.log(fullname);
console.log(FULLNAME);


_fullname="Ravi";
console.log(_fullname);

$fname="Ravi Prakash";
console.log($fname);

12Fullname="abd"; //Invalid Conventions
console="Ravi";//Invalid Conventions because this is a reserve words(Keywords).

Conventions :
-------------
fullName => camelCase
fullname
full_name
full_Name
FullName 
totalPrice
isFollow

let,const & var
---------------

var: Variable can be re-declared & updated. A global scope Variable.
----                                          ----------------------
Example:
var age=24;
var age=87;
var age=21;
console.log(age);// output will be 21


let: Variable cannot be re-declared but can be updated. A block scope variable.
----                                                      --------------------
Example:
--------
let age=21;
age=24;
age=30;
console.log(age);//30

const: Variable cannot be re-declared or updated . A block scope Variable.
------                                               --------------------
Example
-------
 const age=21;
 age=27; // we can't use by this
 console.log(age);//21


Note: var is old model practice. var is not good practice for declaring a variable.

Block Scope Means :
-------------------
{
    let a=5;
    console.log(a);//valid
}
{
    let a=12;
    console.log(a);//valid
}

                                        Data Types in JS :
=================================================================================================
Number , String , Boolean , Undefined , Null , BigInt , Symbol

1. Primitive DataTypes(7) :Number , String , Boolean , Undefined , Null , BigInt , Symbol
2. Non-Primitive DataTypes(Object)


Objects : It is a collection of values.
---------
Example: Student's Data
name
age
rollNo
Marks
isPass

Objects stores key-value pairs : key:value

Ex: name:Ravi
    age:21
    rollNo:2204220109027


========================================================================================================================
                                                        Chapter - 2
========================================================================================================================

Comments in JS
==============
. Comments are used to describe about a code that what will that perticular code do. 
. Parts of the code which is not executed.
. Comments are two types.

1.Single Line Comments
2.Multi-Line Comments

//This is a single line comments in JS
/* This is multiline comments in JS */


                                    Operators and Conditional Statements in JS :
=======================================================================================================================

Used to perform some operation on Data.

1.Arithmetic Operators

+,-,*,/
.Modulus
.Exponentiation
.Increment
.Decrement

Ex. a+b

a,b are operands.
+ is a operator.

// Arithmetic Operators
let a=5;
let b=2;
console.log("a =",a,"\nb =",b);
// console.log(a+b);
console.log(" a + b = ",a+b);
console.log(" a - b = ",a-b);
console.log(" a * b = ",a*b);
console.log(" a / b = ",a/b);
console.log(" a % b = ",a%b);
console.log(" a ** b = ",a**b);//Exponentiation

Unary Operator : works on single operands.
---------------
console.log(++a);//pre-increment operator
console.log(a++);//post-increment operator
console.log(a);

console.log(a--); //post-decrement
console.log(--a); //pre-decrement
console.log(a);

Assignment Operator :
---------------------
=   +=   -=   *=   %=   **=

Ex.
a+=1 ==> a=a+1
a+=4 ==> a+4


let a=5;
let b=2;
// a+=4;
// a*=4;
// a/=4;
// a%=4;
a**=4;
console.log(a);


Comparison Operator :
---------------------
Equal to ==
Equal to & type ===
Not Equal to !=
Not Equal to & type !==
Less That <
Greater Than >
Less that equal to <=
 Greate Than Equal to >=


 let a=5;
let b=2;
// console.log(a==b); // false
// console.log(a!=b); // true
// console.log(a<b); // false
// console.log(a>b); // true
// console.log(a>=b);//true
// console.log(a<=b);//false


// let b=10;
// let c="10";
// console.log(b==c);//true

let d=5;;
let e="5";
console.log(d==e);//true
console.log(d===e);//false
console.log(d!==e);//true


Logical operators :
-------------------
Logical AND   &&
Logical OR    ||
Logical NOT   !

Conditional Statement :
-----------------------
. To implement some condition in the code.
1. if Statement
2. if-else Statement
3. else-if Statement

if Statement
------------
if(condition)
{
    //statements
}

if-else Statement
-----------------
if(condition)
{
    //statements
}
else{
    //condition
}

else-if Statement
-----------------
Syntax:
------
if(condition)
{
    // code
}
else if(condition)
{
    // code
}
else if(condition)
{
    // code
}
else{
    // code
}

Example:
---------
let mode="blue";
let color;

if(mode==="dark")
{
    color="black";
}
else if(mode==="blue")
{
    color="red";
}
else if(mode==="pink")
{
    color="green";
}
else{
    color="white";
}
console.log(color);



Ternary Operator: It is a way to write if else statement in single line. 
-----------------
condition ? true output : false output
age>18 ? "adult" : "not adult" ;

Example:
let age=25;
let res= age>18? "You are eligible for Vote" : "You are not eligible for Vote";
console.log(res);


MDN Docs
---------

switch Statement
----------------

let fruit="Grapes";
switch(fruit)
{
    case "Papaya":
        console.log("This is a papaya");
        break;
    case "Mango":
        console.log("This is a Mango");
        break;
    default:
        console.log(`Sorry! , we don't have found your ${fruit}.`);
}


// let's Practice
==================================================================

// alert("Hello Bhai "); // Creates one time pop-up

/*let name=prompt("Hello");
console.log(name);*/
// prompt("kaise ho"); // Takes input

/*Q1. Get user to input a number using prompt("Enter a number : "). Check if the number is a multiple of 5 or not.
let num=prompt("Enter a number : ");
if(num%5===0)
{
    console.log(num ," is Multiple of 5");
}
else
{
    console.log(num ,"is not multiple of 5");
}
*/


/*Q2. Write a code which can give grade to students according to their scores.
90-100 A
70-89 B
60-69 C 
50-59 D 
0-49 F*/

let score=prompt("Enter your score : ");
// let score=95;
let grade;
if(score>=90 && score<=100)
{
    grade="A";
}
else if(score>=70 && score<=89)
{
    grade="B"
}
else if(score>=60 && score<=69)
{
    grade="C";
}
else if(score>=50 && score<=59)
{
    grade="D";
}
else if(score>=0 && score<=49)
{
    grade="F";
}
// else{
//     grade="F"
// }
console.log("According to your scores , Your grade is : ",grade);



========================================================================================================================
                                           Chapter - 3  Loops & Strings
========================================================================================================================

Loops in JavaScript : Loops are used to execute a piece of code again and again.
---------------------

1. for Loop
2. while Loop
3. do-while Loop
4. for-of Loop

For Loop :
==========
for(initialization; condition; updation)
{
    //statements
}

/*
console.log("Ravi Prakash");
console.log("Ravi Prakash");
console.log("Ravi Prakash");
console.log("Ravi Prakash");
console.log("Ravi Prakash");
*/

// for loop

/*
let count;
for(count=1; count<=10; count++)
{
    console.log("Ravi Prakash"); 
}
*/


/*
let i;
for(i=1; i<=5; i++)
{
    console.log("i = ",i); 
}
*/


// To calculate sum of 1 to 5
/*
let sum=0;
for(let i=1; i<=5; i++)
{
    sum=sum+i;
}
console.log("Sum = ",sum);
console.log("Loop has ended..");
*/


// To calculate sum of 1 to n
/*
let sum=0;
let n=50;
for(let i=1; i<=n; i++)
{
    sum=sum+i;
}
console.log("Sum = ",sum);
console.log("Loop has ended..");
*/



Infinite Loop: A loop that never ends..
--------------


// Infinite Loops :  Infinite Loop hme kbhi nhi krna hai apne program me.

for(let i=1; i>=0; i++)
{
    console.log("i =",i);
}


While Loop :
=============
initialization;
while(condition)
{
    // do some work;
    // updation;
}

/*
let i=1;
while(i<=5)
{
    console.log("i =",i);
    i++;
}
*/


/*
let i=1;
while(i<=10)
{
    console.log("Ravi Prakash");
    i++;
}
*/


// Do while loop
==================

initialization;
do{
    // code;
    //updation;
}
while(condition);


Example:
-------------------
let i=10;
do{
    console.log("Ravi Prakash");
    i++;
}
while(i<=10);


let i=1;
do{
    console.log("i = ",i);
    i++;
}
while(i<=10);

for-of Loop : It works on Character of Strings.
=============

// for-of loop : it works on character of string .
// for-in loop : Used for apply loop on Objects.

for(let val of strVar)
{
    // do some work;
}

for(let val in Object_name)
{
    //do some work;
}

Example :
==========

/*
let str="Ravi Prakash";
for(let i of str)
{
    console.log("i = " ,i);
}
*/

/*
let str="Ravi Prakash";
let  size=0;
for(let i of str)
{
    console.log("i = " ,i);
    size ++;
}
console.log("Size of Str = ",size);
*/


// for-in loop : Used for apply loop on Objects.
let student={
    Name:"Ravi Prakash",
    Branch:"CSE",
    Age:21,
    CGPA:8.55,
    isPass:true
};
console.log(student);
for(let i in student)
{
    // console.log("Keys = ",i,"Values = ",student[i]);//returns only keys
    console.log("key =",i);
}

                                    Let's Practice :
==============================================================================================
Q1. Print all even numbers from 0 to 100.
/*
for(let i=0; i<=100; i++)
{
    if(i%2==0)// for even number
   // if(i%2!==0)// for odd number

    {
        console.log("Even Number =",i);
    }
}
*/

//Q2. Create a game where you start with any random game number . Ask the user to keep guessing the game number until the user enters correct value.

/*
let gameNumber = 21;
let userNumber = prompt("Guess the Game Number : ");
while(userNumber != gameNumber)
{
    userNumber = prompt("You Entered wrong number . Guess Again! : ");
}
console.log("Congratulations! , you entered the right number ...");

*/


                                Strings in JavaScript
                               =======================
// Strings are immutable in JavaScript.

Strings : Strings is a Sequence of Characters which are used to represent the Text.

Creating Strings :
------------------
let str = "Ravi Prakash";
        OR
let str1='Ravi Prakash';

String Length :
---------------
str.length;

String Indices:
---------------
str[0],str[1],str[2];




/*
let str1="Ravi Prakash";
let str2="Saurabh";
console.log(str1);
console.log("Length of ",str1," = ",str1.length);
console.log(str2);
console.log("Length of ",str2," = ",str2.length);


// access using index of string
console.log(str1[0]);
console.log(str1[1]);
console.log(str1[2]);
console.log(str1[3]);
*/

let obj={
    item:"Pen",
    price:10
};
console.log("The price of ",obj.item,"is",obj.price,"Rs.");

//              OR  using template literals

let output = `The cost of ${obj.item} is ${obj.price} Rupees`;
console.log(output);

// Template Literals
let sentence=`This is a template Literals`;
console.log(sentence);
console.log(typeof(sentence));


Template Literals in JavaScript : A way to have embedded expressions in String.
----------------------------------
`This is a Template Literals`;

`` : This is called backtick;

String Interpolation : To create Strings by doing substitutions of placeholders.
----------------------

`string text ${expressions} string text`;


// Escape Characters:
---------------------
\n : next line
\t : a tab sapce 

String Methhods in JavaScript :
-------------------------------
There are built-in functions to manipulate a string.

.str.toUpperCase()
.str.toLoverCase()
.str.trim() // removes whitespace
.str.slice(start,end?)//returns part of string
.str1.concat(str2) //joins str2 with str1
.str.replace(searchVal,newVal)
.str.charAt(idx)
*/

/*
let str="ravi prakash bansal iet lko";

console.log(str.toUpperCase());

console.log(str.toLowerCase());

console.log(str);

console.log(str.trim()); // removes whitespaces from begining and last

let str1 = "Ravi Prakash";
console.log(str1.slice(2,7));

let str2="Saurabh Kumar";
console.log(str2.concat(str1));

console.log(str1.replace("Ravi","Sonu"));

console.log(str1.charAt(5));
*/


Let's Practice :
===============================
Q1. Prompt the user to enter their full name. Generate a username for them based on the input . Starts username with @, followed by their full name and ending with the full name length.

eg. user name="raviprakash",username should be "@raviprakash11"

Example:
---------
let fullname=prompt("Enter Your Full Name Without Space :");
let username="@"+fullname+fullname.length;
console.log(username);